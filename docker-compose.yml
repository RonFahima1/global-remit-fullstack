version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: global_remit
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres_snapshot.sql:/docker-entrypoint-initdb.d/postgres_snapshot.sql:ro
      - ./scripts/postgres-init.sh:/docker-entrypoint-initdb.d/01_postgres-init.sh:ro
    networks:
      - backend_network

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6380:6379"
    networks:
      - backend_network

  backend:
    # build:
    #   context: ./backend
    image: yourrepo/backend:latest
    container_name: backend
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./secrets:/app/secrets
      - ./backend/jwt_private.pem:/app/jwt_private.pem
      - ./backend/jwt_public.pem:/app/jwt_public.pem
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=global_remit
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - APP_PORT=8080
      - GIN_MODE=debug
      - JWT_PRIVATE_KEY=/app/jwt_private.pem
      - JWT_PUBLIC_KEY=/app/jwt_public.pem
    networks:
      - backend_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - backend_network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - backend_network

  frontend:
    # build:
    #   context: ./Frontend
    image: yourrepo/frontend:latest
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
      - NEXTAUTH_URL=http://localhost:3000
      - BACKEND_URL=http://backend:8080/api/v1
      - NEXTAUTH_SECRET=jGTFs40CXzVaYc/n8Dle4YADBINMI3dZf31Blcwhcwk=
      - REDIS_URL=redis://redis:6379
    networks:
      - backend_network

networks:
  backend_network:

volumes:
  postgres_data: 